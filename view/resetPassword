
@model Sabio.Web.Models.ViewModels.ItemViewModel<Guid?>
@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_ChipinLayout.cshtml";
}
<style>
    .col-sm-4 {
        float: none;
    }
</style>

<section id="resetPassword">
    <div data-ng-controller="resetController as dashboard" id="resetCtrler">
        <div ng-cloak class="container">
            <form id="resetForm" name="dashboard.resetForm" novalidate>
                <div ng-show="dashboard.form">
                    <div class="row">
                        <div class="col-md-8 col-xs-10 center-block text-center">
                            <header>
                                <h1>Reset Password</h1>
                            </header>
                        </div><!--.col-->
                    </div><!--.row-->

                    
                    <div class="row">
                        <div class="col-md-8 col-xs-10 center-block text-center">
                            <label for="password">
                                <input type="password" class="form-control ng-class:{'error': dashboard.showNewErrors && !dashboard.resetForm.password.$valid}"
                                       name="password"
                                       id="password"
                                       placeholder="PASSWORD"
                                       ng-model="dashboard.reset.password"
                                       tooltip="Password must contain at least 1 number and 1 uppercase, 1 lowercase, and 1 special character."
                                       tooltip-placement="right"
                                       tooltip-enable="!dashboard.reset.password"
                                       required
                                       ng-minlength="6"
                                       ng-maxlength="13"
                                       style="border-color:#b9c3cd" />
                                <span class="error alert alert-danger" role="alert" ng-show="dashboard.showNewErrors && dashboard.resetForm.password.$error.required">Password is required</span>
                                <span class="error alert alert-danger" role="alert" ng-show=" dashboard.shownewerrors && dashboard.resetform.password.$error.minlength">Password must be at least 6 characters</span>
                                <span class="error alert alert-danger" role="alert" ng-show=" dashboard.shownewerrors && dashboard.resetform.password.$error.maxlength">Password cannot exceed 13 characters</span>
                            </label>
                        </div><!--.col-->
                    </div><!--.row-->
                    <div class="row">
                        <div class="col-md-8 col-xs-10 center-block text-center">
                            <label for="confirmPassword">
                                <input type="password" class="form-control ng-class:{'error': dashboard.showNewErrors && !dashboard.resetForm.confirm.$valid}"
                                       name="confirm"
                                       id="confirm"
                                       placeholder="CONFIRM PASSWORD"
                                       ng-model="dashboard.reset.confirm"
                                       compare-to="dashboard.reset.password"
                                       tooltip="Must match password entered above"
                                       tooltip-placement="right"
                                       tooltip-enable="!dashboard.reset.confirm"
                                       required
                                       ng-minlength="6"
                                       ng-maxlength="13"
                                       style="border-color:#b9c3cd" />
                                <span class="error alert alert-danger" role="alert" ng-show="dashboard.showNewErrors && dashboard.resetForm.confirm.$error.required">Please confirm the password entered.</span>
                                <span class="error alert alert-danger" role="alert" ng-show="dashboard.showNewErrors && dashboard.resetForm.confirm.$error.compareTo">Passwords do not match.</span>
                                
                            </label>

                        </div><!--.col-->

                        <div ng-show="dashboard.error">
                            <div class="row">
                                <div class="col-md-8 col-xs-10 center-block text-center">
                                    <p><span class="red-bg">{{dashboard.errormessage}}</span></p>
                                </div><!-- /.col -->
                            </div><!-- /.row -->
                        </div><!-- ng-show -->

                        <div class="col-md-8 col-xs-10 center-block text-center">
                            <button type="button" id="btn-submit-search" class="btn btn-lg col-sm-4" ng-click="dashboard.resetSubmit()">Submit</button>
                        </div><!--.col-->
                    </div><!--.row-->
                </div>
            </form>

            <div ng-show="dashboard.success">
                <div class="row">
                    <div class="col-md-8 col-xs-10 center-block text-center">
                        <h2>Success!</h2>
                        <p>Your password has been reset.</p>
                        <input type="button" class="btn btn-lg col-sm-4" onclick="location.href = '/home/login';" value="Return to login" />
                    </div><!-- /.col -->
                </div><!-- /.row -->
            </div><!-- ng-show -->   
        </div><!--.container-->
    </div><!--ng-controller-->
</section>
@*creates a hidden input in the view*@
<input type="hidden" id="modelItem" value="@Model.Item" />
<!-- ============================================================= Scripts Begin ============================================================= -->
@section scripts{
    <script src="~/Scripts/sabio.services.password.js"></script>
    <script type="text/javascript">

    sabio.services.resetPasswordFactory = function ($baseService) {
        var aSabioServiceObject = sabio.services.password;
        var newService = $baseService.merge(true, {}, aSabioServiceObject, $baseService); //  combine the Sabio service object with the base service so that Angular knows how to talk to it
        console.log("service made");
        return newService;  //  return the new service
    }
        
    sabio.ng.addService(sabio.ng.app.module, "$resetService", ["$baseService"], sabio.services.resetPasswordFactory)
 

    // ======================================================= Service end ===============================================================================

    // ======================================================= Controller ================================================================================
    sabio.page.resetPasswordControllerFactory = function ($scope, $baseController, $resetService, $sce) {
        console.log("controller start");

        var vm = this;
        vm.item = null;
        // event handlers for click or ajax events
        vm.$resetService = $resetService;
        vm.$scope = $scope;

        vm.onCheckSuccess = _onCheckSuccess;
        vm.onCheckError = _onCheckError;
        vm.resetSubmit = _resetSubmit;

        //  this line to simulate inheritance
        //$.extend(vm, $baseController);
        $baseController.merge(vm, $baseController);

        //  this is a wrapper for our small dependency on $scope
        vm.notify = vm.$resetService.getNotifier($scope);

        //  initialize controller properties which will support our logic
        vm.reset = null;  //  this is the form data - all of our form fields will be bound to this using ng-model
        vm.resetForm = null; //  this will be a reference to the actual form in our html; more on that below
        vm.showNewErrors = false;   //  boolean to keep track of whether or not to show our validation errors on the form
        vm.newId = null;  //newId will be hidden       
        vm.success = false;
        vm.form = true;
        vm.errormessage = null;
        vm.error = false;

        render();//  invoke the render() function on startup

        function render() {
        //checking to see if there is an Uid on start-up
        vm.newId = $("#modelItem").val();
        console.log("Is there an id?", vm.newId);

        if (vm.newId == null && vm.newId.length == 0) {
            console.log("There isn't an existing Uid.")

            }
        }
        console.log("controller created");

        function _resetSubmit() {          
           
            if (vm.resetForm.$valid) {
                
                console.log("data is valid! go save this object -> ", vm.reset);
                vm.$resetService.reset(vm.newId, vm.reset, vm.onCheckSuccess, vm.onCheckError);
                
            }
            else {
                vm.showNewErrors = true;
                console.log("form submitted with invalid data :(")
                
            }
        }
        function _onCheckSuccess(data) {
          
            vm.notify(function () {
                vm.item = data.item;
                console.log("this is guid", data.item)
                vm.success = true;
                vm.form = false;
                vm.error = false;
            });
        }
        function _onCheckError(jqXhr, error) {
            console.error(error);
            console.log(jqXhr.responseJSON);
            vm.notify(function () {
                vm.error = true;
                vm.errormessage = jqXhr.responseJSON;
            })
                
            
        }
    }
    sabio.ng.addController(sabio.ng.app.module
        , "resetController"
        , ['$scope', '$baseController', "$resetService", "$sce"]
        , sabio.page.resetPasswordControllerFactory);

 </script>

    }
